CREATE TABLE cesare.permesso (
	id varchar NOT NULL,
	descrizione varchar NULL,
	CONSTRAINT permesso_pk PRIMARY KEY (id)
);

CREATE TABLE cesare.ruolo (
	id varchar NOT NULL,
	descrizione varchar NULL,
	CONSTRAINT ruolo_pk PRIMARY KEY (id)
);

CREATE TABLE cesare.ruolo_permesso (
	id_ruolo varchar NOT NULL,
	id_permesso varchar NOT NULL,
	CONSTRAINT ruolo_permesso_pk PRIMARY KEY (id_ruolo,id_permesso)
);

CREATE TABLE cesare.utente (
	id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	username varchar NOT NULL,
	"password" varchar NOT NULL,
	"locked" boolean NOT NULL,
	enabled boolean NOT NULL,
	created date NOT NULL,
	expire date NULL,
	CONSTRAINT utente_pk PRIMARY KEY (id),
	CONSTRAINT utente_un UNIQUE (username)
);

CREATE TABLE cesare.utente_permesso (
	id_utente bigint NOT NULL,
	id_permesso varchar NOT NULL,
	CONSTRAINT utente_permesso_pk PRIMARY KEY (id_utente,id_permesso)
);

CREATE TABLE cesare.utente_ruolo (
	id_utente bigint NOT NULL,
	id_ruolo varchar NOT NULL,
	CONSTRAINT utente_ruolo_pk PRIMARY KEY (id_utente,id_ruolo)
);

ALTER TABLE cesare.ruolo_permesso ADD CONSTRAINT ruolo_permesso_fk FOREIGN KEY (id_ruolo) REFERENCES cesare.ruolo(id);
ALTER TABLE cesare.ruolo_permesso ADD CONSTRAINT ruolo_permesso_fk_1 FOREIGN KEY (id_permesso) REFERENCES cesare.permesso(id);

ALTER TABLE cesare.utente_permesso ADD CONSTRAINT utente_permesso_fk FOREIGN KEY (id_utente) REFERENCES cesare.utente(id);
ALTER TABLE cesare.utente_permesso ADD CONSTRAINT utente_permesso_fk_1 FOREIGN KEY (id_permesso) REFERENCES cesare.permesso(id);

ALTER TABLE cesare.utente_ruolo ADD CONSTRAINT utente_ruolo_fk FOREIGN KEY (id_utente) REFERENCES cesare.utente(id);
ALTER TABLE cesare.utente_ruolo ADD CONSTRAINT utente_ruolo_fk_1 FOREIGN KEY (id_ruolo) REFERENCES cesare.ruolo(id);

CREATE TABLE cesare.anagrafica_utente (
	id int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE),
	id_utente int8 NOT NULL,
	nome varchar NULL,
	cognome varchar NULL,
	data_nascita date NULL,
	codice_fiscale varchar NULL,
	indirizzo varchar NULL,
	email varchar NULL,
	telefono varchar NULL,
	CONSTRAINT anagrafica_pk PRIMARY KEY (id),
	CONSTRAINT anagrafica_utente_un UNIQUE (id_utente)
);

ALTER TABLE cesare.anagrafica_utente ADD CONSTRAINT anagrafica_utente_fk FOREIGN KEY (id_utente) REFERENCES cesare.utente(id);

CREATE VIEW cesare.v_permessi_utente AS 
select 
        row_number() OVER (order by w.id_utente )  AS id,
        w.id_utente AS id_utente,
        w.username AS username,
        w.locked AS locked,
        w.enabled AS enabled,
        w.created AS created,
        w.expire AS expire,
        w.id_permesso AS id_permesso,
        w.descrizione AS descrizione 
from 
(
        select distinct 
                t.id_utente AS id_utente,
                t.username AS username,
                t.locked AS locked,
                t.enabled AS enabled,
                t.created AS created,
                t.expire AS expire,
                t.id_permesso AS id_permesso,
                t.descrizione AS descrizione 
        from 
        (
                select 
                        u.id AS id_utente,
                        u.username AS username,
                        u.locked AS locked,
                        u.enabled AS enabled,
                        u.created AS created,
                        u.expire AS expire,
                        p.id AS id_permesso,
                        p.descrizione AS descrizione 
                from 
                        utente u, ruolo r, utente_ruolo ur, ruolo_permesso rp,permesso p 
                where 
                        ((u.id = ur.id_utente) 
                and     (ur.id_ruolo = r.id) 
                and     (rp.id_ruolo = r.id) 
                and     (rp.id_permesso = p.id)) 
                
                union all 
                
                select 
                        u.id AS id_utente,
                        u.username AS username,
                        u.locked AS locked,
                        u.enabled AS enabled,
                        u.created AS created,
                        u.expire AS expire,
                        p.id AS id_permesso,
                        p.descrizione AS descrizione 
                from 
                        utente u, utente_permesso up, permesso p 
                where 
                        ((u.id = up.id_utente) 
                        and (up.id_permesso = p.id))
        ) t
) w;

INSERT INTO cesare.utente (username,password,locked,enabled,created,expire) VALUES
	 ('admin','$2a$10$61D9emETVC2nKAkLn957U.Pgzk5svjfG/VaBb4irc7RMOzx.fRdk6',false,true,'2023-06-05',NULL),
	 ('super_user','$2a$10$61D9emETVC2nKAkLn957U.Pgzk5svjfG/VaBb4irc7RMOzx.fRdk6',false,true,'2023-06-05',NULL),
	 ('user','$2a$10$61D9emETVC2nKAkLn957U.Pgzk5svjfG/VaBb4irc7RMOzx.fRdk6',false,true,'2023-06-05',NULL),
	 ('test','$2a$10$61D9emETVC2nKAkLn957U.Pgzk5svjfG/VaBb4irc7RMOzx.fRdk6',false,true,'2023-06-05',NULL);

INSERT INTO ruolo (id,descrizione) VALUES
	 ('USER','Utente base'),
	 ('SUPER_USER','Utente avanzato'),
	 ('ADMINISTRATOR','Amministratore');

INSERT INTO cesare.permesso (id,descrizione) VALUES
	 ('ADMIN','Permesso da Amministratore'),
	 ('READ','Permesso di sola lettura'),
	 ('WRITE','Permesso di scrittura');
	 
INSERT INTO cesare.ruolo_permesso (id_ruolo,id_permesso) VALUES
	 ('USER','READ'),
	 ('SUPER_USER','READ'),
	 ('SUPER_USER','WRITE'),
	 ('ADMINISTRATOR','READ'),
	 ('ADMINISTRATOR','WRITE'),
	 ('ADMINISTRATOR','ADMIN');

INSERT INTO cesare.utente_permesso (id_utente,id_permesso) VALUES
	 (4,'READ');

INSERT INTO cesare.utente_ruolo (id_utente,id_ruolo) VALUES
	(1,'ADMINISTRATOR'),	 
	(2,'SUPER_USER'),
	(3,'USER');


CREATE TABLE cesare.gerarchia (
	id int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE),
	parent_auth varchar NOT NULL,
	child_auth varchar NOT NULL,
	authority_type varchar NOT NULL,
	CONSTRAINT gerarchia_pk PRIMARY KEY (id)
);

INSERT INTO cesare.gerarchia (parent_auth,child_auth,authority_type) VALUES
	 ('ADMINISTRATOR','SUPER_USER','ROLE'),
	 ('SUPER_USER','USER','ROLE'),
	 ('ADMIN','DELETE','AUTH'),
	 ('DELETE','WRITE','AUTH'),
	 ('WRITE','READ','AUTH');
